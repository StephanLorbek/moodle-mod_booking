{"version":3,"file":"bookit.min.js","sources":["../src/bookit.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * @module     mod_booking/bookit\n * @copyright  Wunderbyte GmbH <info@wunderbyte.at>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport Ajax from 'core/ajax';\nimport Templates from 'core/templates';\nimport Notification from 'core/notification';\n\nimport {reloadAllTables} from 'local_wunderbyte_table/reload';\n\nvar currentbookitpage = {};\nvar totalbookitpages = {};\n\nvar SELECTORS = {\n    MODALID: 'sbPrePageModal_',\n    INMODALDIV: ' div.modalMainContent',\n    MODALHEADER: 'div.modalHeader',\n    MODALBUTTONAREA: 'div.modalButtonArea',\n    MODALFOOTER: 'div.modalFooter',\n    CONTINUEBUTTON: 'a.continue-button', // Don't want to find button right now.\n    BACKBUTTON: 'a.back-button', // Don't want to find button right now.\n    BOOKITBUTTON: 'div.booking-button-area.noprice',\n    INMODALBUTTON: 'div.in-modal-button',\n    STATICBACKDROP: 'div.modal-backdrop',\n};\n\n/**\n * Initializes the bookit button for the normal bookit function.\n * @param {integer} itemid\n * @param {string} area\n */\nexport const initbookitbutton = (itemid, area) => {\n\n    const initselector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid]' +\n    '[data-area]';\n\n    if (!itemid || !area) {\n        const initbuttons = document.querySelectorAll(initselector);\n        initbuttons.forEach(button => {\n            const inititemid = button.dataset.itemid;\n            const initarea = button.dataset.area;\n            initbookitbutton(inititemid, initarea);\n        });\n        return;\n    }\n\n    const selector = SELECTORS.BOOKITBUTTON +\n    '[data-itemid=\"' + itemid + '\"]' +\n    '[data-area=\"' + area + '\"]';\n\n    const buttons = document.querySelectorAll(selector);\n\n    if (!buttons) {\n        return;\n    }\n\n    // We support more than one booking button on the same page.\n    buttons.forEach(button => {\n\n        if (button.dataset.nojs) {\n            return;\n        }\n\n        if (!button.dataset.initialized) {\n            button.dataset.initialized = 'true';\n\n            const userid = button.dataset.userid;\n\n            button.addEventListener('click', (e) => {\n\n                // E.stopPropagation();\n\n                if (e.target.classList.contains('btn')) {\n                    bookit(itemid, area, userid);\n                }\n            });\n        }\n    });\n};\n\n/**\n * Gets called from mustache template.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {integer} totalnumberofpages\n * @param {string} uniquid\n */\nexport const initprepagemodal = (optionid, userid, totalnumberofpages, uniquid) => {\n\n    // eslint-disable-next-line no-console\n    console.log('initprepagemodal', optionid, userid, totalnumberofpages, uniquid);\n\n    if (!optionid || !uniquid || !totalnumberofpages) {\n\n        const elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID);\n\n        elements.forEach(element => {\n            optionid = element.dataset.optionid;\n            uniquid = element.dataset.uniquid;\n            userid = element.dataset.userid;\n            totalnumberofpages = element.dataset.pages;\n            if (optionid && uniquid) {\n                initprepagemodal(optionid, userid, totalnumberofpages, uniquid);\n            }\n        });\n        return;\n    }\n\n    currentbookitpage[optionid] = 0;\n    totalbookitpages[optionid] = totalnumberofpages;\n\n    // We need to get all prepage modals on this site. Make sure they are initialized.\n\n    respondToVisibility(optionid, userid, uniquid, totalnumberofpages, loadPreBookingPage);\n};\n\n/**\n * React on visibility change.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {string} uniquid\n * @param {integer} totalnumberofpages\n * @param {function} callback\n */\nfunction respondToVisibility(optionid, userid, uniquid, totalnumberofpages, callback) {\n\n    // eslint-disable-next-line no-console\n    console.log('respondToVisibility', optionid, totalnumberofpages, uniquid);\n\n    let elements = document.querySelectorAll(\"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"]\");\n\n    // eslint-disable-next-line no-console\n    console.log('elements', \"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"]\", elements);\n\n    elements.forEach(element => {\n        if (!element || element.dataset.initialized == 'true') {\n            return;\n        }\n\n        element.dataset.initialized = true;\n\n        var observer = new MutationObserver(function() {\n            if (!isHidden(element)) {\n                // Todo: Make sure it's not triggered on close.\n                callback(optionid, userid, uniquid, totalnumberofpages);\n            }\n        });\n\n        // We look if we find a hidden parent. If not, we load right away.\n        while (element !== null) {\n            if (!isHidden(element)) {\n                element = element.parentElement;\n            } else {\n                if (element.dataset.observed) {\n                    return;\n                }\n\n                observer.observe(element, {attributes: true});\n                element.dataset.observed = true;\n                return;\n            }\n        }\n        callback(optionid, userid, uniquid, totalnumberofpages);\n    });\n}\n\n/**\n * Function to check visibility of element.\n * @param {*} el\n * @returns {boolean}\n */\nfunction isHidden(el) {\n    var style = window.getComputedStyle(el);\n    return ((style.display === 'none') || (style.visibility === 'hidden'));\n}\n\n/**\n * Loads the (next) pre booking page.\n * @param {integer} optionid\n * @param {integer} userid\n * @param {string} uniquid\n */\nexport const loadPreBookingPage = (\n    optionid, userid = 0, uniquid = '') => {\n\n    // eslint-disable-next-line no-console\n    console.log('loadPreBookingPage', optionid, uniquid, userid);\n\n    const element = returnVisibleElement(optionid, uniquid, SELECTORS.INMODALDIV);\n    if (element) {\n        while (element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n    } else {\n        // eslint-disable-next-line no-console\n        console.error('didnt find element');\n    }\n\n    Ajax.call([{\n        methodname: \"mod_booking_load_pre_booking_page\",\n        args: {\n            optionid,\n            userid,\n            'pagenumber': currentbookitpage[optionid],\n        },\n        done: function(res) {\n\n            // eslint-disable-next-line no-console\n            console.log(currentbookitpage[optionid], totalbookitpages[optionid]);\n\n            // If we are on the last page, we reset it to 0.\n            if (currentbookitpage[optionid] === totalbookitpages[optionid] - 1) {\n                currentbookitpage[optionid] = 0;\n            }\n\n            const jsonobject = JSON.parse(res.json);\n\n            // We support more than one template, they will be seperated by comma.\n            // We have a data key in the json\n            const templates = res.template.split(',');\n            let dataarray = jsonobject;\n            // Const buttontype = res.buttontype;\n\n            renderTemplatesOnPage(templates, dataarray, element);\n\n            // ShowRightButton(optionid, buttontype);\n\n            return true;\n        },\n        fail: function(err) {\n            // eslint-disable-next-line no-console\n            console.log(err);\n        }\n    }]);\n};\n\n/**\n *\n * @param {string} templates\n * @param {object} dataarray\n * @param {HTMLElement} element\n */\nasync function renderTemplatesOnPage(templates, dataarray, element) {\n\n    // eslint-disable-next-line no-console\n    console.log('templates: ', templates);\n\n    const modal = element.closest('.modal-body');\n\n    modal.querySelector(SELECTORS.MODALHEADER).innerHTML = '';\n    modal.querySelector(SELECTORS.INMODALDIV).innerHTML = '';\n    modal.querySelector(SELECTORS.MODALBUTTONAREA).innerHTML = '';\n    modal.querySelector(SELECTORS.MODALFOOTER).innerHTML = '';\n\n    templates.forEach(async template => {\n\n        const data = dataarray.shift();\n\n        let targetelement = element;\n\n        if (!data) {\n            return true;\n        }\n\n        switch (template) {\n            case 'mod_booking/bookingpage/header':\n                targetelement = modal.querySelector(SELECTORS.MODALHEADER);\n                break;\n            case 'mod_booking/bookingoption_description_prepagemodal_bookit':\n                targetelement = modal.querySelector(SELECTORS.INMODALDIV);\n                break;\n            case 'mod_booking/bookit_button':\n            case 'mod_booking/bookit_price':\n                targetelement = modal.querySelector(SELECTORS.MODALBUTTONAREA);\n                break;\n            case 'mod_booking/bookingpage/footer':\n                targetelement = modal.querySelector(SELECTORS.MODALFOOTER);\n                break;\n        }\n\n        await Templates.renderForPromise(template, data.data).then(({html, js}) => {\n\n            // eslint-disable-next-line no-console\n            console.log('targetelement: ', targetelement);\n\n            Templates.replaceNodeContents(targetelement, html, js);\n\n            return true;\n        }).catch(ex => {\n            Notification.addNotification({\n                message: 'failed rendering ' + ex,\n                type: \"danger\"\n            });\n        });\n        return true;\n    });\n    return true;\n}\n\n/**\n *\n * @param {int} itemid\n * @param {string} area\n * @param {int} userid\n */\nfunction bookit(itemid, area, userid) {\n\n    Ajax.call([{\n        methodname: \"mod_booking_bookit\",\n        args: {\n            'itemid': itemid,\n            'area': area,\n            'userid': userid,\n        },\n        done: function(res) {\n\n            const jsonarray = JSON.parse(res.json);\n\n            // We might have more than one template to render.\n            const templates = res.template.split(',');\n\n            // There might be more than one button area.\n            const buttons = document.querySelectorAll(SELECTORS.BOOKITBUTTON +\n                '[data-itemid=\\'' + itemid + '\\']' +\n                '[data-area=\\'' + area + '\\']');\n\n            const promises = [];\n\n            // eslint-disable-next-line no-console\n            console.log(buttons);\n\n            // We run through every button. and render the data.\n            buttons.forEach(button => {\n\n                // For every button, we need a new jsonarray.\n                const arraytoreduce = [...jsonarray];\n\n                templates.forEach(template => {\n                    const data = arraytoreduce.shift();\n\n                    // We need to check if this will render the prepagemodal again.\n                    // We never render the prepage modal in the in modal button.\n                    if (!(template === 'mod_booking/bookingpage/prepagemodal'\n                            && button.parentElement.classList.contains('in-modal-button'))) {\n\n                        const datatorender = data.data ?? data;\n\n                        const promise = Templates.renderForPromise(template, datatorender).then(({html, js}) => {\n\n                            Templates.replaceNode(button, html, js);\n\n                            return true;\n                        }).catch(ex => {\n                            Notification.addNotification({\n                                message: 'failed rendering ' + ex,\n                                type: \"danger\"\n                            });\n                        });\n\n                        promises.push(promise);\n                    }\n                });\n            });\n\n            Promise.all(promises).then(() => {\n\n                const backdrop = document.querySelector(SELECTORS.STATICBACKDROP);\n\n                if (!backdrop) {\n                    reloadAllTables();\n                }\n\n                // The actions on successful booking are executed elsewhere.\n                return true;\n            }).catch(e => {\n                // eslint-disable-next-line no-console\n                console.log(e);\n            });\n        }\n    }]);\n}\n\n/**\n * We want to find out the visible modal\n * @param {integer} optionid\n * @param {string} uniquid\n * @param {string} appendedSelector\n * @returns {HTMLElement}\n */\nfunction returnVisibleElement(optionid, uniquid, appendedSelector) {\n\n    // First, we get all the possbile Elements (we don't now the unique id appended to the element.)\n    let selector = \"[id^=\" + SELECTORS.MODALID + optionid + \"_\" + uniquid + \"] \" + appendedSelector;\n    if (!uniquid || uniquid.length === 0) {\n        selector = \"[id^=\" + SELECTORS.MODALID + optionid + \"].show \" + appendedSelector;\n    }\n\n    const elements = document.querySelectorAll(selector);\n\n    let visibleElement = null;\n\n    elements.forEach(element => {\n\n        // eslint-disable-next-line no-console\n        console.log('visibleElement', selector, element);\n\n        visibleElement = element;\n    });\n\n    return visibleElement;\n}\n\n/**\n * Load next prepage booking page.\n * @param {int} optionid\n * @param {int} userid\n */\nexport function continueToNextPage(optionid, userid) {\n\n    currentbookitpage[optionid]++;\n\n    loadPreBookingPage(optionid, userid);\n}\n\n/**\n *  Load previous prepage booking page.\n * @param {int} optionid\n * @param {int} userid\n */\nexport function backToPreviousPage(optionid, userid) {\n\n    currentbookitpage[optionid]--;\n\n    loadPreBookingPage(optionid, userid);\n}"],"names":["optionid","userid","currentbookitpage","loadPreBookingPage","totalbookitpages","SELECTORS","initbookitbutton","itemid","area","initselector","document","querySelectorAll","forEach","button","inititemid","dataset","initarea","selector","buttons","nojs","initialized","addEventListener","e","target","classList","contains","call","methodname","args","done","res","jsonarray","JSON","parse","json","templates","template","split","promises","console","log","arraytoreduce","data","shift","parentElement","datatorender","promise","Templates","renderForPromise","then","_ref2","html","js","replaceNode","catch","ex","addNotification","message","type","push","Promise","all","querySelector","bookit","initprepagemodal","totalnumberofpages","uniquid","callback","elements","element","observer","MutationObserver","isHidden","observed","observe","attributes","respondToVisibility","pages","el","style","window","getComputedStyle","display","visibility","returnVisibleElement","firstChild","removeChild","error","jsonobject","renderTemplatesOnPage","fail","err","dataarray","modal","closest","innerHTML","async","targetelement","_ref","replaceNodeContents","appendedSelector","length","visibleElement"],"mappings":"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"}