define("mod_booking/elective-sorting",["exports","mod_booking/wunderbyte"],(function(_exports,_wunderbyte){function _arrayLikeToArray(arr,len){(null==len||len>arr.length)&&(len=arr.length);for(var i=0,arr2=new Array(len);i<len;i++)arr2[i]=arr[i];return arr2}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.electiveSorting=function(){var options={items:SELECTOR_SORTITEM,container:SELECTOR_SORTCONTAINER};(new _wunderbyte.WunderByteJS).sortable(options);var confirmButton=document.querySelector(SELECTOR_CONFIRMBUTTON),sortContainer=document.querySelector(SELECTOR_SORTCONTAINER),observer=new MutationObserver((function(mutationList){var _step,_iterator=function(o,allowArrayLike){var it="undefined"!=typeof Symbol&&o[Symbol.iterator]||o["@@iterator"];if(!it){if(Array.isArray(o)||(it=function(o,minLen){if(!o)return;if("string"==typeof o)return _arrayLikeToArray(o,minLen);var n=Object.prototype.toString.call(o).slice(8,-1);"Object"===n&&o.constructor&&(n=o.constructor.name);if("Map"===n||"Set"===n)return Array.from(o);if("Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))return _arrayLikeToArray(o,minLen)}(o))||allowArrayLike&&o&&"number"==typeof o.length){it&&(o=it);var i=0,F=function(){};return{s:F,n:function(){return i>=o.length?{done:!0}:{done:!1,value:o[i++]}},e:function(_e){throw _e},f:F}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var err,normalCompletion=!0,didErr=!1;return{s:function(){it=it.call(o)},n:function(){var step=it.next();return normalCompletion=step.done,step},e:function(_e2){didErr=!0,err=_e2},f:function(){try{normalCompletion||null==it.return||it.return()}finally{if(didErr)throw err}}}}(mutationList);try{for(_iterator.s();!(_step=_iterator.n()).done;){"childList"===_step.value.type&&function(){var url=confirmButton.getAttribute("href"),list=[];document.querySelectorAll(SELECTOR_SORTITEM).forEach((function(element){list.push(parseInt(element.dataset.id))})),url=(url=url.split("&list="))[0]+"&list="+JSON.stringify(list),confirmButton.setAttribute("href",url)}()}}catch(err){_iterator.e(err)}finally{_iterator.f()}}));sortContainer&&observer.observe(sortContainer,{attributes:!0,childList:!0,subtree:!0})};var SELECTOR_CONFIRMBUTTON="#confirmbutton",SELECTOR_SORTCONTAINER="ul#wb-sortabe",SELECTOR_SORTITEM="li.list-group-item"}));

//# sourceMappingURL=elective-sorting.min.js.map